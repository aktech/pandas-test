# This workflow may or may not run depending on the state of the next
# unreleased Python version. DO NOT DELETE IT.
#
# In general, this file will remain frozen(present, but not running) until:
#    - The next unreleased Python version has released beta 1
#      - This version should be available on GitHub Actions.
#    - Our required build/runtime dependencies(numpy, pytz, Cython, python-dateutil)
#      support that unreleased Python version.
#    To unfreeze, comment out the ``if: false`` condition, and make sure you update
#    the name of the workflow and Python version in actions/setup-python to: '3.12-dev'
#
# After it has been unfrozen, this file should remain unfrozen(present, and running) until:
#    - The next Python version has been officially released.
#    OR
#    - Most/All of our optional dependencies support Python 3.11 AND
#    - The next Python version has released a rc(we are guaranteed a stable ABI).
#    To freeze this file, uncomment out the ``if: false`` condition, and migrate the jobs
#    to the corresponding posix/windows-macos/sdist etc. workflows.
# Feel free to modify this comment as necessary.

name: Python Dev

on:
  push:
    branches:
      - main
      - 1.5.x
  pull_request:
    branches:
      - main
      - 1.5.x
    paths-ignore:
      - "doc/**"

env:
  PYTEST_WORKERS: "auto"
  PANDAS_CI: 1
  PATTERN: "not slow and not network and not clipboard and not single_cpu"
  COVERAGE: true
  PYTEST_TARGET: pandas

permissions:
  contents: read

jobs:
  build:
    # if: false # Uncomment this to freeze the workflow, comment it to unfreeze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    name: actions-311-dev
    timeout-minutes: 120

    concurrency:
      #https://github.community/t/concurrecy-not-work-for-push/183068/7
      group: ${{ github.event_name == 'push' && github.run_number || github.ref }}-${{ matrix.os }}-${{ matrix.pytest_target }}-dev
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python Dev Version
      uses: actions/setup-python@v4
      with:
        python-version: '3.11-dev'

    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -i https://pypi.anaconda.org/scipy-wheels-nightly/simple numpy
        python -m pip install git+https://github.com/nedbat/coveragepy.git
        python -m pip install python-dateutil pytz cython
        # TODO: update when upstream releases fixes
        python -m pip install "git+https://github.com/mesonbuild/meson.git@master"
        python -m pip install "git+https://github.com/FFY00/meson-python.git@main"
        python -m pip install hypothesis==6.52.1 pytest>=6.2.5 pytest-xdist pytest-cov pytest-asyncio>=0.17
        python -m pip list

      # Sigh, someone (numpy?) is depending on mingw, which pandas doesn't compile with.
      # Also, meson doesn't detect visual c++ unless cl.exe is in path.
      # TODO: File a bug with meson about this.
    - name: Build Pandas
      if : ${{ runner.os != 'Windows' }}
      run: |
        python -m pip install . --no-build-isolation -v
      shell: bash -el {0}

    - name: Build Pandas (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        call micromamba activate test
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        python -m pip install . --no-build-isolation -v
      shell: cmd /C call {0}

    - name: Build Version
      run: |
        # Can't import pandas from the source directory
        cd .. && python -c "import pandas; pandas.show_versions();"

    - name: Test
      uses: ./.github/actions/run-tests
